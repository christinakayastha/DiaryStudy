{"version":3,"sources":["../scripts/uploader.js"],"names":["window","friendlyPix","Uploader","FULL_IMAGE_SPECS","maxDimension","quality","THUMB_IMAGE_SPECS","constructor","database","firebase","auth","storage","addPolyfills","$","document","ready","addButton","addButtonFloating","imageInput","overlay","newPictureContainer","uploadButton","imageCaptionInput","uploadPicForm","toast","click","initiatePictureCapture","change","e","readPicture","submit","uploadPic","keyup","prop","val","HTMLCanvasElement","prototype","toBlob","Object","defineProperty","value","callback","type","binStr","atob","toDataURL","split","len","length","arr","Uint8Array","i","charCodeAt","Blob","trigger","displayPicture","url","attr","page","focus","disableUploadUi","disabled","toggle","event","clear","file","target","files","currentFile","wrap","closest","get","reset","unwrap","match","reader","FileReader","onload","result","readAsDataURL","_getScaledCanvas","image","thumbCanvas","createElement","width","height","getContext","drawImage","generateImages","fullDeferred","Deferred","thumbDeferred","resolveFullBlob","blob","resolve","resolveThumbBlob","Image","src","maxThumbDimension","maxFullDimension","fullCanvas","Promise","all","promise","then","results","full","thumb","preventDefault","imageCaption","pics","uploadNewPic","name","postId","currentUser","uid","data","message","actionHandler","actionText","timeout","MaterialSnackbar","showSnackbar","error","console","cancelAllSubscriptions","MaterialUtils","clearTextField","uploader"],"mappings":"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","file":"uploader.js","sourcesContent":["/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nwindow.friendlyPix = window.friendlyPix || {};\n\n/**\n * Handles uploads of new pics.\n */\nfriendlyPix.Uploader = class {\n\n  /**\n   * @return {number}\n   */\n  static get FULL_IMAGE_SPECS() {\n    return {\n      maxDimension: 1280,\n      quality: 0.9\n    };\n  }\n\n  /**\n   * @return {number}\n   */\n  static get THUMB_IMAGE_SPECS() {\n    return {\n      maxDimension: 640,\n      quality: 0.7\n    };\n  }\n\n  /**\n   * Inititializes the pics uploader/post creator.\n   * @constructor\n   */\n  constructor() {\n    // Firebase SDK\n    this.database = firebase.database();\n    this.auth = firebase.auth();\n    this.storage = firebase.storage();\n\n    this.addPolyfills();\n\n    $(document).ready(() => {\n      // DOM Elements\n      this.addButton = $('#add');\n      this.addButtonFloating = $('#add-floating');\n      this.imageInput = $('#fp-mediacapture');\n      this.overlay = $('.fp-overlay', '#page-add');\n      this.newPictureContainer = $('#newPictureContainer');\n      this.uploadButton = $('.fp-upload');\n      this.imageCaptionInput = $('#imageCaptionInput');\n      this.uploadPicForm = $('#uploadPicForm');\n      this.toast = $('.mdl-js-snackbar');\n\n      // Event bindings\n      this.addButton.click(() => this.initiatePictureCapture());\n      this.addButtonFloating.click(() => this.initiatePictureCapture());\n      this.imageInput.change(e => this.readPicture(e));\n      this.uploadPicForm.submit(e => this.uploadPic(e));\n      this.imageCaptionInput.keyup(() => this.uploadButton.prop('disabled', !this.imageCaptionInput.val()));\n    });\n  }\n\n  // Adds polyfills requireed for the Uploader.\n  addPolyfills() {\n    // Polyfill for canvas.toBlob().\n    if (!HTMLCanvasElement.prototype.toBlob) {\n      Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\n        value: function(callback, type, quality) {\n          var binStr = atob(this.toDataURL(type, quality).split(',')[1]);\n          var len = binStr.length;\n          var arr = new Uint8Array(len);\n\n          for (var i = 0; i < len; i++) {\n            arr[i] = binStr.charCodeAt(i);\n          }\n\n          callback(new Blob([arr], {type: type || 'image/png'}));\n        }\n      });\n    }\n  }\n\n  /**\n   * Start taking a picture.\n   */\n  initiatePictureCapture() {\n    this.imageInput.trigger('click');\n  }\n\n  /**\n   * Displays the given pic in the New Pic Upload dialog.\n   */\n  displayPicture(url) {\n    this.newPictureContainer.attr('src', url);\n    page('/add');\n    this.imageCaptionInput.focus();\n    this.uploadButton.prop('disabled', true);\n  }\n\n  /**\n   * Enables or disables the UI. Typically while the image is uploading.\n   */\n  disableUploadUi(disabled) {\n    this.uploadButton.prop('disabled', disabled);\n    this.addButton.prop('disabled', disabled);\n    this.addButtonFloating.prop('disabled', disabled);\n    this.imageCaptionInput.prop('disabled', disabled);\n    this.overlay.toggle(disabled);\n  }\n\n  /**\n   * Reads the picture the has been selected by the file picker.\n   */\n  readPicture(event) {\n    this.clear();\n\n    var file = event.target.files[0]; // FileList object\n    this.currentFile = file;\n\n    // Clear the selection in the file picker input.\n    this.imageInput.wrap('<form>').closest('form').get(0).reset();\n    this.imageInput.unwrap();\n\n    // Only process image files.\n    if (file.type.match('image.*')) {\n      var reader = new FileReader();\n      reader.onload = e => this.displayPicture(e.target.result);\n      // Read in the image file as a data URL.\n      reader.readAsDataURL(file);\n      this.disableUploadUi(false);\n    }\n  }\n\n  /**\n   * Returns a Canvas containing the given image scaled down to the given max dimension.\n   * @private\n   * @static\n   */\n  static _getScaledCanvas(image, maxDimension) {\n    const thumbCanvas = document.createElement('canvas');\n    if (image.width > maxDimension ||\n      image.height > maxDimension) {\n      if (image.width > image.height) {\n        thumbCanvas.width = maxDimension;\n        thumbCanvas.height = maxDimension * image.height / image.width;\n      } else {\n        thumbCanvas.width = maxDimension * image.width / image.height;\n        thumbCanvas.height = maxDimension;\n      }\n    } else {\n      thumbCanvas.width = image.width;\n      thumbCanvas.height = image.height;\n    }\n    thumbCanvas.getContext('2d').drawImage(image, 0, 0, image.width, image.height,\n      0, 0, thumbCanvas.width, thumbCanvas.height);\n    return thumbCanvas;\n  }\n\n  /**\n   * Generates the full size image and image thumb using canvas and returns them in a promise.\n   */\n  generateImages() {\n    const fullDeferred = new $.Deferred();\n    const thumbDeferred = new $.Deferred();\n\n    const resolveFullBlob = blob => fullDeferred.resolve(blob);\n    const resolveThumbBlob = blob => thumbDeferred.resolve(blob);\n\n    const displayPicture = url => {\n      const image = new Image();\n      image.src = url;\n\n      // Generate thumb.\n      const maxThumbDimension = friendlyPix.Uploader.THUMB_IMAGE_SPECS.maxDimension;\n      const thumbCanvas = friendlyPix.Uploader._getScaledCanvas(image, maxThumbDimension);\n      thumbCanvas.toBlob(resolveThumbBlob, 'image/jpeg', friendlyPix.Uploader.THUMB_IMAGE_SPECS.quality);\n\n      // Generate full sized image.\n      const maxFullDimension = friendlyPix.Uploader.FULL_IMAGE_SPECS.maxDimension;\n      const fullCanvas = friendlyPix.Uploader._getScaledCanvas(image, maxFullDimension);\n      fullCanvas.toBlob(resolveFullBlob, 'image/jpeg', friendlyPix.Uploader.FULL_IMAGE_SPECS.quality);\n    };\n\n    const reader = new FileReader();\n    reader.onload = e => displayPicture(e.target.result);\n    reader.readAsDataURL(this.currentFile);\n\n    return Promise.all([fullDeferred.promise(), thumbDeferred.promise()]).then(results => {\n      return {\n        full: results[0],\n        thumb: results[1]\n      };\n    });\n  }\n\n  /**\n   * Uploads the pic to Firebase Storage and add a new post into the Firebase Database.\n   */\n  uploadPic(e) {\n    e.preventDefault();\n    this.disableUploadUi(true);\n    var imageCaption = this.imageCaptionInput.val();\n\n    this.generateImages().then(pics => {\n      // Upload the File upload to Firebase Storage and create new post.\n      friendlyPix.firebase.uploadNewPic(pics.full, pics.thumb, this.currentFile.name, imageCaption)\n          .then(postId => {\n            page(`/user/${this.auth.currentUser.uid}`);\n            var data = {\n              message: 'New pic has been posted!',\n              actionHandler: () => page(`/post/${postId}`),\n              actionText: 'View',\n              timeout: 10000\n            };\n            this.toast[0].MaterialSnackbar.showSnackbar(data);\n            this.disableUploadUi(false);\n          }, error => {\n            console.error(error);\n            var data = {\n              message: `There was an error while posting your pic. Sorry!`,\n              timeout: 5000\n            };\n            this.toast[0].MaterialSnackbar.showSnackbar(data);\n            this.disableUploadUi(false);\n          });\n        });\n  }\n\n  /**\n   * Clear the uploader.\n   */\n  clear() {\n    this.currentFile = null;\n\n    // Cancel all Firebase listeners.\n    friendlyPix.firebase.cancelAllSubscriptions();\n\n    // Clear previously displayed pic.\n    this.newPictureContainer.attr('src', '');\n\n    // Clear the text field.\n    friendlyPix.MaterialUtils.clearTextField(this.imageCaptionInput[0]);\n\n    // Make sure UI is not disabled.\n    this.disableUploadUi(false);\n  }\n};\n\nfriendlyPix.uploader = new friendlyPix.Uploader();\n"]}