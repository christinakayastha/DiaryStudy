{"version":3,"sources":["../scripts/userpage.js"],"names":["window","friendlyPix","UserPage","constructor","database","firebase","auth","$","document","ready","userPage","userAvatar","toast","userUsername","userInfoContainer","followContainer","noPosts","followLabel","followCheckbox","nbPostsContainer","nbFollowers","nbFollowing","nbFollowingContainer","followingContainer","nextPageButton","closeFollowingButton","userInfoPageImageContainer","change","onFollowChange","onAuthStateChanged","trackFollowStatus","click","displayFollowing","hide","removeClass","checked","prop","toggleFollowUser","userId","currentUser","registerToFollowStatusUpdate","data","val","text","MaterialUtils","refreshSwitchState","addPosts","posts","postIds","Object","keys","i","length","append","createImageCard","thumb_url","url","toggleNextPageButton","nextPage","show","unbind","then","entries","loadUser","clear","uid","loadUserProfile","snapshot","userInfo","css","profile_picture","full_name","message","timeout","MaterialSnackbar","showSnackbar","page","registerForFollowersCount","registerForFollowingCount","nbFollowed","registerForPostsCount","nbPosts","getUserFeedPosts","subscribeToUserFeed","postId","postValue","prepend","registerForPostsDeletion","remove","getFollowingProfiles","profiles","forEach","createProfileCardHtml","addClass","cancelAllSubscriptions","stopOnEndScrolls","thumbUrl","element","replace","registerForLikesCount","nbLikes","registerForCommentsCount","nbComments","profilePic","fullName"],"mappings":"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","file":"userpage.js","sourcesContent":["/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nwindow.friendlyPix = window.friendlyPix || {};\n\n/**\n * Handles the User Profile UI.\n */\nfriendlyPix.UserPage = class {\n\n  /**\n   * Initializes the user's profile UI.\n   * @constructor\n   */\n  constructor() {\n    // Firebase SDK.\n    this.database = firebase.database();\n    this.auth = firebase.auth();\n\n    $(document).ready(() => {\n      // DOM Elements.\n      this.userPage = $('#page-user-info');\n      this.userAvatar = $('.fp-user-avatar');\n      this.toast = $('.mdl-js-snackbar');\n      this.userUsername = $('.fp-user-username');\n      this.userInfoContainer = $('.fp-user-container');\n      this.followContainer = $('.fp-follow');\n      this.noPosts = $('.fp-no-posts', this.userPage);\n      this.followLabel = $('.mdl-switch__label', this.followContainer);\n      this.followCheckbox = $('#follow');\n      this.nbPostsContainer = $('.fp-user-nbposts', this.userPage);\n      this.nbFollowers = $('.fp-user-nbfollowers', this.userPage);\n      this.nbFollowing = $('.fp-user-nbfollowing', this.userPage);\n      this.nbFollowingContainer = $('.fp-user-nbfollowing-container', this.userPage);\n      this.followingContainer = $('.fp-user-following', this.userPage);\n      this.nextPageButton = $('.fp-next-page-button button');\n      this.closeFollowingButton = $('.fp-close-following', this.userPage);\n      this.userInfoPageImageContainer = $('.fp-image-container', this.userPage);\n\n      // Event bindings.\n      this.followCheckbox.change(() => this.onFollowChange());\n      this.auth.onAuthStateChanged(() => this.trackFollowStatus());\n      this.nbFollowingContainer.click(() => this.displayFollowing());\n      this.closeFollowingButton.click(() => {\n        this.followingContainer.hide();\n        this.nbFollowingContainer.removeClass('is-active');\n      });\n    });\n  }\n\n  /**\n   * Triggered when the user changes the \"Follow\" checkbox.\n   */\n  onFollowChange() {\n    const checked = this.followCheckbox.prop('checked');\n    this.followCheckbox.prop('disabled', true);\n\n    return friendlyPix.firebase.toggleFollowUser(this.userId, checked);\n  }\n\n  /**\n   * Starts tracking the \"Follow\" checkbox status.\n   */\n  trackFollowStatus() {\n    if (this.auth.currentUser) {\n      friendlyPix.firebase.registerToFollowStatusUpdate(this.userId, data => {\n        this.followCheckbox.prop('checked', data.val() !== null);\n        this.followCheckbox.prop('disabled', false);\n        this.followLabel.text(data.val() ? 'Following' : 'Follow');\n        friendlyPix.MaterialUtils.refreshSwitchState(this.followContainer);\n      });\n    }\n  }\n\n  /**\n   * Adds the list of posts to the UI.\n   */\n  addPosts(posts) {\n    const postIds = Object.keys(posts);\n    for (let i = postIds.length - 1; i >= 0; i--) {\n      this.userInfoPageImageContainer.append(\n          friendlyPix.UserPage.createImageCard(postIds[i],\n              posts[postIds[i]].thumb_url || posts[postIds[i]].url, posts[postIds[i]].text));\n      this.noPosts.hide();\n    }\n  }\n\n  /**\n   * Shows the \"load next page\" button and binds it the `nextPage` callback. If `nextPage` is `null`\n   * then the button is hidden.\n   */\n  toggleNextPageButton(nextPage) {\n    if (nextPage) {\n      this.nextPageButton.show();\n      this.nextPageButton.unbind('click');\n      this.nextPageButton.prop('disabled', false);\n      this.nextPageButton.click(() => {\n        this.nextPageButton.prop('disabled', true);\n        nextPage().then(data => {\n          this.addPosts(data.entries);\n          this.toggleNextPageButton(data.nextPage);\n        });\n      });\n    } else {\n      this.nextPageButton.hide();\n    }\n  }\n\n  /**\n   * Displays the given user information in the UI.\n   */\n  loadUser(userId) {\n    this.userId = userId;\n\n    // Reset the UI.\n    this.clear();\n\n    // If users is the currently signed-in user we hide the \"Follow\" Checkbox.\n    if (this.auth.currentUser && userId === this.auth.currentUser.uid) {\n      this.followContainer.hide();\n    } else {\n      this.followContainer.show();\n      this.followCheckbox.prop('disabled', true);\n      friendlyPix.MaterialUtils.refreshSwitchState(this.followContainer);\n      // Start live tracking the state of the \"Follow\" Checkbox.\n      this.trackFollowStatus();\n    }\n\n    // Load user's profile.\n    friendlyPix.firebase.loadUserProfile(userId).then(snapshot => {\n      const userInfo = snapshot.val();\n      if (userInfo) {\n        this.userAvatar.css('background-image',\n            `url(\"${userInfo.profile_picture || '/images/silhouette.jpg'}\")`);\n        this.userUsername.text(userInfo.full_name || 'Anonymous');\n        this.userInfoContainer.show();\n      } else {\n        var data = {\n          message: 'This user does not exists.',\n          timeout: 5000\n        };\n        this.toast[0].MaterialSnackbar.showSnackbar(data);\n        page(`/feed`);\n      }\n    });\n\n    // Lod user's number of followers.\n    friendlyPix.firebase.registerForFollowersCount(userId,\n        nbFollowers => this.nbFollowers.text(nbFollowers));\n\n    // Lod user's number of followed users.\n    friendlyPix.firebase.registerForFollowingCount(userId,\n        nbFollowed => this.nbFollowing.text(nbFollowed));\n\n    // Lod user's number of posts.\n    friendlyPix.firebase.registerForPostsCount(userId,\n        nbPosts => this.nbPostsContainer.text(nbPosts));\n\n    // Display user's posts.\n    friendlyPix.firebase.getUserFeedPosts(userId).then(data => {\n      const postIds = Object.keys(data.entries);\n      if (postIds.length === 0) {\n        this.noPosts.show();\n      }\n      friendlyPix.firebase.subscribeToUserFeed(userId,\n        (postId, postValue) => {\n          this.userInfoPageImageContainer.prepend(\n              friendlyPix.UserPage.createImageCard(postId,\n                  postValue.thumb_url || postValue.url, postValue.text));\n          this.noPosts.hide();\n        }, postIds[postIds.length - 1]);\n\n      // Adds fetched posts and next page button if necessary.\n      this.addPosts(data.entries);\n      this.toggleNextPageButton(data.nextPage);\n    });\n\n    // Listen for posts deletions.\n    friendlyPix.firebase.registerForPostsDeletion(postId =>\n        $(`.fp-post-${postId}`, this.userPage).remove());\n  }\n\n  /**\n   * Displays the list of followed people.\n   */\n  displayFollowing() {\n    friendlyPix.firebase.getFollowingProfiles(this.userId).then(profiles => {\n      // Clear previous following list.\n      $('.fp-usernamelink', this.followingContainer).remove();\n      // Display all following profile cards.\n      Object.keys(profiles).forEach(uid => this.followingContainer.prepend(\n          friendlyPix.UserPage.createProfileCardHtml(\n              uid, profiles[uid].profile_picture, profiles[uid].full_name)));\n      if (Object.keys(profiles).length > 0) {\n        this.followingContainer.show();\n        // Mark submenu as active.\n        this.nbFollowingContainer.addClass('is-active');\n      }\n    });\n  }\n\n  /**\n   * Clears the UI and listeners.\n   */\n  clear() {\n    // Removes all pics.\n    $('.fp-image', this.userInfoPageImageContainer).remove();\n\n    // Remove active states of sub menu selectors (like \"Following\").\n    $('.is-active', this.userInfoPageImageContainer).removeClass('is-active');\n\n    // Cancel all Firebase listeners.\n    friendlyPix.firebase.cancelAllSubscriptions();\n\n    // Hides the \"Load Next Page\" button.\n    this.nextPageButton.hide();\n\n    // Hides the user info box.\n    this.userInfoContainer.hide();\n\n    // Hide and empty the list of Followed people.\n    this.followingContainer.hide();\n    $('.fp-usernamelink', this.followingContainer).remove();\n\n    // Stops then infinite scrolling listeners.\n    friendlyPix.MaterialUtils.stopOnEndScrolls();\n\n    // Hide the \"No posts\" message.\n    this.noPosts.hide();\n  }\n\n  /**\n   * Returns an image Card element for the image with the given URL.\n   */\n  static createImageCard(postId, thumbUrl, text) {\n    const element = $(`\n          <a href=\"/post/${postId}\" class=\"fp-post-${postId} fp-image mdl-cell mdl-cell--12-col mdl-cell--4-col-tablet\n                                            mdl-cell--4-col-desktop mdl-grid mdl-grid--no-spacing\">\n              <div class=\"fp-overlay\">\n                  <i class=\"material-icons\">favorite</i><span class=\"likes\">0</span>\n                  <i class=\"material-icons\">mode_comment</i><span class=\"comments\">0</span>\n                  <div class=\"fp-pic-text\">${text}</div>\n              </div>\n              <div class=\"mdl-card mdl-shadow--2dp mdl-cell\n                          mdl-cell--12-col mdl-cell--12-col-tablet mdl-cell--12-col-desktop\"></div>\n          </a>`);\n    // Display the thumbnail.\n    $('.mdl-card', element).css('background-image', `url(\"${thumbUrl.replace(/\"/g, '\\\\\"')}\")`);\n    // Start listening for comments and likes counts.\n    friendlyPix.firebase.registerForLikesCount(postId,\n        nbLikes => $('.likes', element).text(nbLikes));\n    friendlyPix.firebase.registerForCommentsCount(postId,\n        nbComments => $('.comments', element).text(nbComments));\n\n    return element;\n  }\n\n  /**\n   * Returns an image Card element for the image with the given URL.\n   */\n  static createProfileCardHtml(uid, profilePic = '/images/silhouette.jpg', fullName = 'Anonymous') {\n    return `\n        <a class=\"fp-usernamelink mdl-button mdl-js-button\" href=\"/user/${uid}\">\n            <div class=\"fp-avatar\" style=\"background-image: url('${profilePic}')\"></div>\n            <div class=\"fp-username mdl-color-text--black\">${fullName}</div>\n        </a>`;\n  }\n};\n\nfriendlyPix.userPage = new friendlyPix.UserPage();\n"]}